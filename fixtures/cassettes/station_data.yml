---
http_interactions:
- request:
    method: get
    uri: https://developer.nrel.gov/api/alt-fuel-stations/v1/nearest.json?api_key=5TVSgrxJAKtH9rRiVYpJ28FdIobTxOkYP9uwL6Cu&fuel_type=ELEC&location=1331%2017th%20St%20LL100%20Denver%20CO%2080202
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.17.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - openresty
      Date:
      - Fri, 20 Dec 2019 18:06:23 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      - Origin
      X-Ratelimit-Limit:
      - '1000'
      X-Ratelimit-Remaining:
      - '967'
      X-Frame-Options:
      - deny
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, POST, OPTIONS
      Access-Control-Max-Age:
      - '86400'
      Last-Modified:
      - Fri, 20 Dec 2019 18:06:23 GMT
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - b389e762-9268-4509-b1a9-d3e522fb25d7
      X-Runtime:
      - '0.013036'
      Strict-Transport-Security:
      - max-age=31536000; preload
      - max-age=31536000; preload
      Age:
      - '0'
      Via:
      - https/1.1 api-umbrella (ApacheTrafficServer [cMsSf ])
      X-Cache:
      - MISS
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 20 Dec 2019 18:05:52 GMT
recorded_with: VCR 5.0.0
